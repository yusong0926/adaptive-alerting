<!--
  ~ Copyright 2018-2019 Expedia Group, Inc.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<jmxtrans-agent>
    <queries>
        <!-- JVM -->
        <query objectName="java.lang:type=Memory" attribute="HeapMemoryUsage" key="used"
               resultAlias="jvm.heapMemoryUsage.used"/>
        <query objectName="java.lang:type=Memory" attribute="HeapMemoryUsage" key="committed"
               resultAlias="jvm.heapMemoryUsage.committed"/>
        <query objectName="java.lang:type=Memory" attribute="NonHeapMemoryUsage" key="used"
               resultAlias="jvm.nonHeapMemoryUsage.used"/>
        <query objectName="java.lang:type=Memory" attribute="NonHeapMemoryUsage" key="committed"
               resultAlias="jvm.nonHeapMemoryUsage.committed"/>
        <query objectName="java.lang:type=Threading" attribute="ThreadCount" resultAlias="jvm.thread"/>
        <query objectName="java.lang:type=OperatingSystem" attribute="SystemCpuLoad" resultAlias="jvm.cpu.usage"/>
      
        <!-- TOMCAT -->
        <query objectName="Tomcat:type=GlobalRequestProcessor,name=*" attribute="requestCount"
               resultAlias="tomcat.requestCount"/>
        <query objectName="Tomcat:type=GlobalRequestProcessor,name=*" attribute="errorCount"
               resultAlias="tomcat.errorCount"/>
        <query objectName="Tomcat:type=GlobalRequestProcessor,name=*" attribute="processingTime"
               resultAlias="tomcat.processingTime"/>
        <query objectName="Tomcat:type=GlobalRequestProcessor,name=*" attribute="bytesSent"
               resultAlias="tomcat.bytesSent"/>
        <query objectName="Tomcat:type=GlobalRequestProcessor,name=*" attribute="bytesReceived"
               resultAlias="tomcat.bytesReceived"/>
      
        <!-- HTTP Status -->
        <!-- FIXME. Just trying out with this URI. Will make a more generic URI later on. [KS] -->
        <!-- GET Requests -->
        <query objectName="spring:name=httpServerRequests.exception.None.method.GET.status.200.uri./api/{repository}" attribute="Count"
               resultAlias="http.get.200Count"/>
        <query objectName="spring:name=httpServerRequests.exception.None.method.GET.status.200.uri./api/{repository}/search/{search}" attribute="Count"
               resultAlias="http.get.200Count"/>
        <query objectName="spring:name=&quot;httpServerRequests.exception.None.method.GET.status.404.uri./\*\*&quot;" attribute="Count"
               resultAlias="http.get.404Count"/>
        <query objectName="spring:name=httpServerRequests.exception.ResourceNotFoundException.method.GET.status.404.uri./api/{repository}/search/{search}" attribute="Count"
               resultAlias="http.get.404Count"/>
        <query objectName="spring:name=httpServerRequests.exception.None.method.GET.status.500.uri./api/{repository}" attribute="Count"
               resultAlias="http.get.500Count"/>
        <!-- POST Requests -->
        <query objectName="spring:name=httpServerRequests.exception.None.method.POST.status.201.uri./api/{repository}" attribute="Count"
               resultAlias="http.post.201Count"/>
        <query objectName="spring:name=httpServerRequests.exception.HttpMessageNotReadableException.method.POST.status.400.uri./api/{repository}" attribute="Count"
               resultAlias="http.post.400Count"/>
        <query objectName="spring:name=&quot;httpServerRequests.exception.None.method.POST.status.500.uri./\*\*&quot;" attribute="Count"
               resultAlias="http.post.500Count"/>
    </queries>
    <outputWriter class="org.jmxtrans.agent.GraphitePlainTextTcpOutputWriter">
        <host>${AA_GRAPHITE_HOST:metrics}</host>
        <port>${AA_GRAPHITE_PORT:2003}</port>
        <enabled>${AA_GRAPHITE_ENABLED:true}</enabled>
        <namePrefix>${GRAPHITE_PREFIX:}adaptive-alerting-modelservice.#hostname#.</namePrefix>
    </outputWriter>
    <collectIntervalInSeconds>60</collectIntervalInSeconds>
</jmxtrans-agent>
